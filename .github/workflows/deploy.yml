name: cgv CI/CD

on:
  push:
    branches: ["master", "deploy"]

env:
  WEB_IMAGE:   ${{ secrets.DOCKER_USERNAME }}/cgv-web
  NGINX_IMAGE: ${{ secrets.DOCKER_USERNAME }}/cgv-nginx

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build JAR
        run: ./gradlew clean bootJar -x test

      - name: Login Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push (web)
        run: |
          docker build -f Dockerfile -t $WEB_IMAGE:latest -t $WEB_IMAGE:${{ github.sha }} .
          docker push $WEB_IMAGE:${{ github.sha }}
          docker push $WEB_IMAGE:latest

      - name: Build & Push (nginx)
        run: |
          docker build -f Dockerfile-nginx -t $NGINX_IMAGE:latest -t $NGINX_IMAGE:${{ github.sha }} .
          docker push $NGINX_IMAGE:${{ github.sha }}
          docker push $NGINX_IMAGE:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH to EC2 & deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd /home/ubuntu/app

            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # 최신 이미지 당겨서 기동
            docker compose pull
            docker compose up -d

            # 불필요 이미지 청소
            docker image prune -f
